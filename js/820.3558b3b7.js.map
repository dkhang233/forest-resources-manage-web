{"version":3,"file":"js/820.3558b3b7.js","mappings":"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","sources":["webpack://forest-resources-manage-application/./src/api/wood.js","webpack://forest-resources-manage-application/./src/components/wood/WoodOperationForm.vue","webpack://forest-resources-manage-application/./src/components/wood/WoodOperationForm.vue?b4e3"],"sourcesContent":["import { apiClient } from \"@/api/index\";\r\n\r\nexport const retrieveAllWoodType = () => apiClient.get('wood-facilities/production-type')\r\nexport const createProductionType = (productionType) => apiClient.post(`wood-facilities/production-type/${productionType.woodType}`, productionType)\r\nexport const updateProductionType = (productionType) => apiClient.put(`wood-facilities/production-type/${productionType.woodType}`, productionType)\r\nexport const deleteProductionType = (woodType) => apiClient.delete(`wood-facilities/production-type/${woodType}`)\r\n\r\nexport const retrieveAllOperationForm = () => apiClient.get('wood-facilities/operation-form')\r\nexport const createOperationForm = (operationForm) => apiClient.post(`wood-facilities/operation-form/${operationForm.name}`, operationForm)\r\nexport const updateOperationForm = (operationForm) => apiClient.put(`wood-facilities/operation-form/${operationForm.name}`, operationForm)\r\nexport const deleteOperationForm = (operationFormName) => apiClient.delete(`wood-facilities/operation-form/${operationFormName}`)\r\n\r\nexport const retrieveAllWoodFacilities = () => apiClient.get('wood-facilities')\r\nexport const updateWoodFacility = (facility) => apiClient.put(`wood-facilities/${facility.code}`, facility)\r\nexport const createWoodFacility = (facility) => apiClient.post(`wood-facilities/${facility.code}`, facility)\r\nexport const deleteWoodFacility = (facilityCode) => apiClient.delete(`wood-facilities/${facilityCode}`)\r\n\r\nexport const createWoodQuantity = (woodQuantity) => apiClient.put('wood-facilities/production-type/facilities/add', woodQuantity)\r\nexport const retrieveWoodQuantityByMonth = (start, end) => apiClient.get(`wood-facilities/production-type/facilities/month/${start}/${end}`)\r\nexport const retrieveWoodQuantityByQuarter = (start, end) => apiClient.get(`wood-facilities/production-type/facilities/quarter/${start}/${end}`)\r\nexport const retrieveWoodQuantityByYear = (start, end) => apiClient.get(`wood-facilities/production-type/facilities/year/${start}/${end}`)\r\nexport const retrieveAllWoodQuantityNow = () => apiClient.get('wood-facilities/production-type/facilities/now')\r\n\r\nexport const retrieveAllCoordinates = () => apiClient.get('wood-facilities/coordinates')\r\nexport const updateCoordinates = (coordinates) => apiClient.put('wood-facilities/coordinates', coordinates)\r\nexport const deleteCoordinates = (code) => apiClient.delete(`wood-facilities/coordinates/${code}`)\r\n","<template>\r\n    <p class=\"container bg-[url('@/assets/image/operation-form-bg.jpg')] bg-cover \">\r\n    <div class=\"grid grid-cols-20 px-[9rem] pt-4\">\r\n        <div class=\"col-start-3\">\r\n            <el-card class=\"h-[33rem] w-[60rem] rounded-3xl\" shadow=\"always\" v-loading=\"loadingStatus\">\r\n                <el-table :data=\"filterTableData\" class=\"h-[32rem] break-normal\"\r\n                    style=\"--el-table-row-hover-bg-color: #D0D3D4;\" fit>\r\n                    <el-table-column v-for=\"(item, index) in tableColumns\" :key=\"index\" :label=\"item.title\"\r\n                        :prop=\"item.value\" align=\"center\">\r\n                    </el-table-column>\r\n                    <el-table-column :min-width=\"120\" align=\"center\">\r\n                        <template #header>\r\n                            <el-input v-model=\"search\" size=\"large\" placeholder=\"Tìm kiếm theo tên\" />\r\n                        </template>\r\n                        <template #default=\"scope\">\r\n                            <el-button @click=\"handleClickUpdate(scope.$index, scope.row)\">Chi tiết</el-button>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n            </el-card>\r\n            <el-dialog id=\"dialog\" class=\" block rounded-lg\r\n                    bg-white p-6 \r\n                    shadow-[0_2px_15px_-3px_rgba(0,0,0,0.07),0_10px_20px_-2px_rgba(0,0,0,0.04)]\r\n                    dark:bg-neutral-700\" top=\"15vh\" v-model=\"dialogFormVisible\" :title=\"formTitle\"\r\n                :before-close=\"handleCancel\">\r\n                <el-form class=\"grid grid-cols-10\" ref=\"ruleFormRef\" :model=\"form\" status-icon :rules=\"rules\"\r\n                    size=\"default\" label-position=\"top\">\r\n                    <div class=\"col-start-1 col-span-10\">\r\n                        <el-form-item label=\"Tên\" prop=\"name\">\r\n                            <el-input v-model=\"form.name\" :disabled=\"formType == 'update'\" />\r\n                        </el-form-item>\r\n                        <el-form-item label=\"Mô tả\" prop=\"description\">\r\n                            <el-input v-model=\"form.description\" :rows=\"2\" type=\"textarea\" />\r\n                        </el-form-item>\r\n                    </div>\r\n                </el-form>\r\n                <template #footer>\r\n                    <span class=\"grid grid-cols-16 gap-4\">\r\n                        <button class=\"p-2 mr-3  font-sans font-bold text-sm\r\n                        text-white rounded-lg shadow-lg \r\n                        px-5 bg-red-500 shadow-blue-100 \r\n                        hover:bg-opacity-90  hover:shadow-lg \r\n                        border transition hover:-translate-y-0.5 duration-150\" @click=\"handleDeleteOperationForm\"\r\n                            v-if=\"formType == 'update'\">\r\n                            Xóa\r\n                        </button>\r\n                        <button class=\" p-2 col-start-12  font-sans font-bold text-sm\r\n                        text-white rounded-lg shadow-lg px-5 bg-blue-500 \r\n                        shadow-blue-100 hover:bg-opacity-90  hover:shadow-lg \r\n                        border transition hover:-translate-y-0.5 duration-150\"\r\n                            @click=\"handleUpdateProductionType(this.$refs.ruleFormRef)\" v-if=\"formType == 'update'\">\r\n                            Cập nhập\r\n                        </button>\r\n                        <button class=\" p-2 col-start-12 font-sans font-bold text-sm\r\n                        text-white rounded-lg shadow-lg px-5 bg-blue-500 \r\n                        shadow-blue-100 hover:bg-opacity-90  hover:shadow-lg \r\n                        border transition hover:-translate-y-0.5 duration-150\"\r\n                            @click=\"handleCreateOperationForm(this.$refs.ruleFormRef)\" v-if=\"formType == 'create'\">\r\n                            Tạo mới\r\n                        </button>\r\n                    </span>\r\n                </template>\r\n            </el-dialog>\r\n        </div>\r\n    </div>\r\n    <el-row>\r\n        <el-col :offset=\"5\">\r\n            <button class=\"w-full md:w-auto flex justify-center \r\n                        items-center p-3 my-5 space-x-4 font-sans font-bold\r\n                        text-white rounded-lg shadow-lg \r\n                        px-9 bg-blue-500 shadow-blue-100 \r\n                        hover:bg-opacity-90  hover:shadow-lg \r\n                        border transition hover:-translate-y-0.5 duration-150\" @click=\"handleClickCreateOperationType\">\r\n                <font-awesome-icon :icon=\"['fas', 'plus']\" size=\"lg\" />\r\n                <span>Tạo mới</span>\r\n            </button>\r\n        </el-col>\r\n    </el-row>\r\n    </p>\r\n</template>\r\n\r\n<script>\r\nimport * as woodApi from '@/api/wood'\r\nexport default {\r\n    data() {\r\n        return {\r\n            loadingStatus: false,\r\n            search: '',\r\n            tableColumns: [\r\n                {\r\n                    title: 'Tên',\r\n                    value: 'name'\r\n                },\r\n                {\r\n                    title: 'Mô tả',\r\n                    value: 'description'\r\n                },\r\n            ],\r\n            tableData: [],\r\n            filterTableData: [],\r\n            dialogFormVisible: false,\r\n            form: {\r\n                name: '',\r\n                description: '',\r\n            },\r\n            formBackUp: null,\r\n            formType: 'update',\r\n            rules: {\r\n                name: [{ validator: this.checkNameAndDescription, trigger: 'blur' }],\r\n                description: [{ validator: this.checkNameAndDescription, trigger: 'blur' }]\r\n            },\r\n        }\r\n    },\r\n    computed: {\r\n        formTitle() {\r\n            return this.formType == 'update' ? 'Thông tin chi tiết' : 'Tạo loại hình sản xuất mới'\r\n        }\r\n    },\r\n    watch: {\r\n        search(search) {\r\n            this.filterTableData = this.tableData.filter(\r\n                (data) =>\r\n                    !search ||\r\n                    data.name.toLowerCase().includes(search.toLowerCase())\r\n            )\r\n        }\r\n    },\r\n    methods: {\r\n        // Lấy dữ liệu ban đầu từ server\r\n        retrieveData() {\r\n            this.loadingStatus = true\r\n            woodApi.retrieveAllOperationForm().then((res) => {\r\n                this.tableData = res.data\r\n                this.filterTableData = this.tableData\r\n                this.loadingStatus = false\r\n            }).catch(err => console.log(err))\r\n        },\r\n        // Xử lý khi ấn vào nút \"Tạo mới\"\r\n        handleClickCreateOperationType() {\r\n            this.formType = 'create'\r\n            this.resetFormData()\r\n            if (this.$refs.ruleFormRef != null) {\r\n                this.$refs.ruleFormRef.clearValidate()\r\n            }\r\n            this.formBackUp = {\r\n                name: this.form.name,\r\n                description: this.form.description\r\n            }\r\n            this.dialogFormVisible = true\r\n        },\r\n        // Xử lý yêu cầu \"Tạo mới\"\r\n        handleCreateOperationForm(form) {\r\n            if (!form) return\r\n            form.validate((valid) => {\r\n                if (valid) {\r\n                    this.$confirm(\r\n                        'Tạo mới thông tin này. Tiếp tục?',\r\n                        'Xác nhận',\r\n                        {\r\n                            confirmButtonText: 'OK',\r\n                            cancelButtonText: 'Hủy',\r\n                            type: 'warning',\r\n\r\n                        }\r\n                    )\r\n                        .then(() => {\r\n                            const loading = this.$loading({\r\n                                target: this.$el.querySelector('#dialog')\r\n                            })\r\n                            woodApi.createOperationForm(this.form)\r\n                                .then((res) => {\r\n                                    loading.close()\r\n                                    this.dialogFormVisible = false\r\n                                    this.$notify({\r\n                                        title: 'Thành công',\r\n                                        message: 'Thêm mới thành công',\r\n                                        type: 'success'\r\n                                    })\r\n                                    this.retrieveData()\r\n                                }).catch((err) => {\r\n                                    loading.close()\r\n                                    let message = ''\r\n                                    try {\r\n                                        message = err.response.data.messages\r\n                                    } catch (error) {\r\n                                        console.log(err)\r\n                                    }\r\n                                    this.$notify({\r\n                                        title: 'Đã xảy ra lỗi',\r\n                                        message: message,  //response.data.messages\r\n                                        type: 'error',\r\n                                    })\r\n                                })\r\n                        })\r\n                        .catch((err) => {\r\n                            // console.log(err)\r\n                        })\r\n                } else {\r\n                    return false\r\n                }\r\n            })\r\n        },\r\n        //Hàm xử lí khi ấn vào nút \"Chi tiết\"\r\n        handleClickUpdate(index, row) {\r\n            if (this.$refs.ruleFormRef != null) {\r\n                this.$refs.ruleFormRef.clearValidate()\r\n            }\r\n            this.formType = 'update'\r\n            this.form = row\r\n            this.formBackUp = {\r\n                name: this.form.name,\r\n                description: this.form.description\r\n            }\r\n            this.dialogFormVisible = true\r\n        },\r\n        // Hàm xử lí khi ấn vào nút \"Cập nhập\"\r\n        handleUpdateProductionType(form) {\r\n            if (!form) return\r\n            form.validate((valid) => {\r\n                if (valid) {\r\n                    this.$confirm(\r\n                        'Cập nhập thông tin này. Tiếp tục?',\r\n                        'Xác nhận',\r\n                        {\r\n                            confirmButtonText: 'OK',\r\n                            cancelButtonText: 'Hủy',\r\n                            type: 'warning',\r\n\r\n                        }\r\n                    )\r\n                        .then(() => {\r\n                            const loading = this.$loading({\r\n                                target: this.$el.querySelector('#dialog')\r\n                            })\r\n                            woodApi.updateOperationForm(this.form)\r\n                                .then((res) => {\r\n                                    loading.close()\r\n                                    this.dialogFormVisible = false\r\n                                    this.$notify({\r\n                                        title: 'Thành công',\r\n                                        message: 'Cập nhập thành công',\r\n                                        type: 'success'\r\n                                    })\r\n                                    this.retrieveData()\r\n                                }).catch((err) => {\r\n                                    loading.close()\r\n                                    try {\r\n                                        this.$notify({\r\n                                            title: 'Đã xảy ra lỗi',\r\n                                            message: err.response.data.messages,\r\n                                            type: 'error',\r\n                                        })\r\n                                        console.log(err.message)\r\n                                    } catch (error) {\r\n                                        console.log(error)\r\n                                    }\r\n                                })\r\n                        })\r\n                        .catch((err) => {\r\n                            // console.log(err)\r\n                        })\r\n                } else {\r\n                    return false\r\n                }\r\n            })\r\n        },\r\n\r\n        // --------------Xử lí trong dialog \"Thông tin chi tiết\" -------------------------\r\n        // Hàm xử lí khi ấn vào nút \"Xóa\"\r\n        handleDeleteOperationForm(index, row) {\r\n            this.$confirm(\r\n                'Xóa thông tin này. Tiếp tục?',\r\n                'Xác nhận',\r\n                {\r\n                    confirmButtonText: 'OK',\r\n                    cancelButtonText: 'Hủy',\r\n                    type: 'warning',\r\n                }\r\n            )\r\n                .then(() => {\r\n                    const loading = this.$loading({\r\n                        target: this.$el.querySelector('#dialog')\r\n                    })\r\n                    woodApi.deleteOperationForm(this.form.name)\r\n                        .then((res) => {\r\n                            loading.close()\r\n                            this.dialogFormVisible = false\r\n                            this.$notify({\r\n                                title: 'Thành công',\r\n                                message: 'Xóa thành công',\r\n                                type: 'success'\r\n                            })\r\n                            this.retrieveData()\r\n                        })\r\n                        .catch((err) => {\r\n                            loading.close()\r\n                            try {\r\n                                this.$notify({\r\n                                    title: 'Đã xảy ra lỗi',\r\n                                    message: err.response.data.messages,\r\n                                    type: 'error',\r\n                                })\r\n                                console.log(err.message)\r\n                            } catch (error) {\r\n                                console.log(error)\r\n                            }\r\n                        })\r\n                })\r\n                .catch(() => {\r\n                })\r\n        },\r\n\r\n        // Hàm xử lí khi ấn vào nút \"Quay lại\"\r\n        handleCancel() {\r\n            if (this.form.name == this.formBackUp.name\r\n                && this.form.description == this.formBackUp.description\r\n            ) {\r\n                this.dialogFormVisible = false\r\n            }\r\n            else {\r\n                this.$confirm(\r\n                    'Hủy bỏ thay đổi. Tiếp tục?',\r\n                    'Xác nhận',\r\n                    {\r\n                        confirmButtonText: 'OK',\r\n                        cancelButtonText: 'Hủy',\r\n                        type: 'warning',\r\n                    }\r\n                )\r\n                    .then(() => {\r\n                        if (this.formBackUp != null) {\r\n                            this.form.name = this.formBackUp.name\r\n                            this.form.description = this.formBackUp.description\r\n                        }\r\n                        this.dialogFormVisible = false\r\n                    })\r\n                    .catch(() => {\r\n                    })\r\n            }\r\n\r\n        },\r\n\r\n        // Reset dữ liệu của form \r\n        resetFormData() {\r\n            this.form = {\r\n                name: '',\r\n                description: ''\r\n            }\r\n        },\r\n        checkNameAndDescription(rule, value, callback) {\r\n            let pattern = /^\\s*$/\r\n            if (value == null || pattern.test(value)) {\r\n                callback(new Error('Vui lòng nhập thông tin này'))\r\n            }\r\n            return callback()\r\n        },\r\n    },\r\n    created() {\r\n        this.retrieveData()\r\n    }\r\n}\r\n</script>\r\n<style>\r\n.el-table .cell {\r\n    word-break: normal;\r\n}\r\n</style>\r\n","import { render } from \"./WoodOperationForm.vue?vue&type=template&id=2d96f0e0\"\nimport script from \"./WoodOperationForm.vue?vue&type=script&lang=js\"\nexport * from \"./WoodOperationForm.vue?vue&type=script&lang=js\"\n\nimport \"./WoodOperationForm.vue?vue&type=style&index=0&id=2d96f0e0&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["retrieveAllWoodType","apiClient","get","createProductionType","productionType","post","woodType","updateProductionType","put","deleteProductionType","delete","retrieveAllOperationForm","createOperationForm","operationForm","name","updateOperationForm","deleteOperationForm","operationFormName","retrieveAllWoodFacilities","updateWoodFacility","facility","code","createWoodFacility","deleteWoodFacility","facilityCode","createWoodQuantity","woodQuantity","retrieveWoodQuantityByMonth","start","end","retrieveWoodQuantityByQuarter","retrieveWoodQuantityByYear","retrieveAllWoodQuantityNow","retrieveAllCoordinates","updateCoordinates","coordinates","deleteCoordinates","class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createBlock","_component_el_card","shadow","_createVNode","_component_el_table","data","$data","filterTableData","style","fit","_Fragment","_renderList","tableColumns","item","index","_component_el_table_column","key","label","title","prop","value","align","header","_withCtx","_component_el_input","search","$event","size","placeholder","default","scope","_component_el_button","onClick","$options","handleClickUpdate","$index","row","loadingStatus","_component_el_dialog","id","top","dialogFormVisible","formTitle","handleCancel","footer","_hoisted_5","formType","_cache","args","handleDeleteOperationForm","handleUpdateProductionType","this","$refs","ruleFormRef","handleCreateOperationForm","_component_el_form","ref","model","form","rules","_hoisted_4","_component_el_form_item","disabled","description","rows","type","_component_el_row","_component_el_col","offset","handleClickCreateOperationType","_component_font_awesome_icon","icon","_hoisted_6","tableData","formBackUp","validator","checkNameAndDescription","trigger","computed","watch","filter","toLowerCase","includes","methods","retrieveData","woodApi","then","res","catch","err","console","log","resetFormData","clearValidate","validate","valid","$confirm","confirmButtonText","cancelButtonText","loading","$loading","target","$el","querySelector","close","$notify","message","response","messages","error","rule","callback","pattern","test","Error","created","__exports__","render"],"sourceRoot":""}