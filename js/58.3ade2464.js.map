{"version":3,"file":"js/58.3ade2464.js","mappings":"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","sources":["webpack://forest-resources-manage-application/./src/api/administration.js","webpack://forest-resources-manage-application/./src/components/administration/Administration.vue","webpack://forest-resources-manage-application/./src/components/map/MapView.vue","webpack://forest-resources-manage-application/./src/api/map.js","webpack://forest-resources-manage-application/./src/components/map/MapView.vue?1fbc","webpack://forest-resources-manage-application/./src/components/administration/Administration.vue?d379"],"sourcesContent":["import { apiClient } from \"./index\"\r\n\r\nexport const retrieveAllAdministrations = () => apiClient.get(`administrations`)\r\n\r\nexport const retrieveSubAdministrationsWithHierarchy = (code) => apiClient.get(`administrations/${code}/sub`)\r\n\r\nexport const retrieveAdministrationByName = (name) => apiClient.get(`administrations/name/${name}`)\r\n\r\nexport const updateAdministration  = (code,administration) => apiClient.post(`administrations/${code}`,administration)","<template>\r\n    <div class=\"tree\" v-loading=\"loadingStatus\">\r\n        <el-row :gutter=\"50\">\r\n            <el-col :span=\"10\">\r\n                <el-card class=\"administrations\">\r\n                    <template #header>\r\n                        <font-awesome-icon :icon=\"['fas', 'magnifying-glass']\" flip=\"horizontal\" size=\"lg\" />\r\n                        <el-input :offset=\"2\" v-model=\"filterText\" placeholder=\"Filter keyword\" class=\"form\" />\r\n                    </template>\r\n                    <el-tree-v2 default-expand-all ref=\"treeRef\" class=\"el-tree\" :data=\"treeData\" :props=\"defaultProps\"\r\n                        :item-size=\"50\" :expand-on-click-node=\"false\" :filter-method=\"filterNode\" :height=\"500\">\r\n                        <template #default=\"{ node, data }\">\r\n                            <span class=\"custom-tree-node\">\r\n                                <span>{{ node.label }}</span>\r\n                                <a class=\"text-blue-500 ml-[100px] hover:text-blue-300\" @click=\"showNode(data)\">Chi tiết</a>\r\n                            </span>\r\n                        </template>\r\n                    </el-tree-v2>\r\n                </el-card>\r\n            </el-col>\r\n            <el-col :span=\"13\">\r\n                <el-card class=\"box-card\">\r\n                    <template #header>\r\n                        <div class=\"card-header\">\r\n                            <span>Map</span>\r\n                        </div>\r\n                    </template>\r\n                    <map-view class=\"map\"></map-view>\r\n                </el-card>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <el-dialog v-model=\"dialogFormVisible\" title=\"Thông tin đơn vị hành chính\">\r\n            <el-form ref=\"ruleFormRef\" :model=\"form\" status-icon :rules=\"rules\">\r\n                <el-form-item label=\"Mã\" prop=\"code\">\r\n                    <el-input v-model=\"form.code\" autocomplete=\"off\" disabled />\r\n                </el-form-item>\r\n                <el-form-item label=\"Cấp Hành Chính\" prop=\"level\">\r\n                    <el-select v-model=\"form.level\" placeholder=\"Chọn cấp hành chính\">\r\n                        <el-option label=\"xã\" value=\"xã\" />\r\n                        <el-option label=\"thị trấn\" value=\"thị trấn\" />\r\n                        <el-option label=\"huyện\" value=\"huyện\" />\r\n                        <el-option label=\"thành phố\" value=\"thành phố\" />\r\n                        <el-option label=\"tỉnh\" value=\"tỉnh\" />\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item label=\"Tên\" prop=\"name\">\r\n                    <el-input v-model=\"form.name\" placeholder=\"\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"Trực thuộc\" prop=\"sub\">\r\n                    <el-input v-model=\"form.subName\" autocomplete=\"off\" />\r\n                </el-form-item>\r\n            </el-form>\r\n            <template #footer>\r\n                <span class=\"grid grid-cols-6 gap-4\">\r\n                    <button class=\"p-2 mr-5 space-x-[100px] font-sans font-bold \r\n                        text-white rounded-lg shadow-lg \r\n                        px-5 bg-red-500 shadow-blue-100 \r\n                        hover:bg-opacity-90  hover:shadow-lg \r\n                        border transition hover:-translate-y-0.5 duration-150\" @click=\"deleteBtn\">\r\n                        Xóa\r\n                    </button>\r\n                    <button class=\"p-2 mr-3 col-start-5 font-sans font-bold\r\n                        text-white rounded-lg shadow-lg \r\n                        px-5 bg-[#839192] shadow-blue-100 \r\n                        hover:bg-opacity-90  hover:shadow-lg \r\n                        border transition hover:-translate-y-0.5 duration-150\" @click=\"dialogFormVisible = false\">\r\n                        Quay lại\r\n                    </button>\r\n                    <button class=\" p-2 col-start-6  font-sans font-bold\r\n                        text-white rounded-lg shadow-lg px-5 bg-blue-500 \r\n                        shadow-blue-100 hover:bg-opacity-90  hover:shadow-lg \r\n                        border transition hover:-translate-y-0.5 duration-150\"\r\n                        @click=\"updateBtn(this.$refs.ruleFormRef)\">\r\n                        Cập nhập\r\n                    </button>\r\n                </span>\r\n            </template>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { retrieveSubAdministrationsWithHierarchy, updateAdministration } from \"../../api/administration\"\r\nimport { mapStores } from 'pinia'\r\nimport { useUserStore } from \"../../stores/user-store\"\r\nimport MapView from \"@/components/map/MapView\";\r\nexport default {\r\n    components: {\r\n        MapView\r\n    },\r\n    data() {\r\n        return {\r\n            defaultProps: {\r\n                value: `code`,\r\n                children: `children`,\r\n                label: `fullName`,\r\n            },\r\n            filterText: \"\",\r\n            treeData: [],\r\n            dialogFormVisible: false,\r\n            form: {\r\n                code: \"\",\r\n                level: \"\",\r\n                name: \"\",\r\n                subName: \"\",\r\n            },\r\n            rules: {\r\n                name: [{ validator: this.checkAdministrationName, trigger: 'change' }, { validator: this.checkAdministrationSub, trigger: 'change' }]\r\n            },\r\n            loadingStatus: false\r\n        }\r\n    },\r\n    watch: {\r\n        filterText(val) {\r\n            this.$refs.treeRef.filter(val)\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapStores(useUserStore)\r\n    },\r\n    methods: {\r\n        filterNode(value, dataa) {\r\n            if (!value) return true\r\n            return dataa.fullName.includes(value)\r\n        },\r\n        showNode(node) {\r\n            this.form.code = node.code\r\n            this.form.name = node.name\r\n            this.form.level = node.levelName\r\n            this.form.subName = node.subordinateName\r\n            this.dialogFormVisible = true\r\n        },\r\n        checkAdministrationName(rule, value, callback) {\r\n            if (!value) {\r\n                return callback(new Error('Vui lòng nhập mã hành chính'))\r\n            }\r\n            else {\r\n                callback()\r\n            }\r\n        },\r\n        checkAdministrationSub(rule, value, callback) {\r\n            if (!value) {\r\n                return callback(new Error('Vui lòng trực thuộc'))\r\n            }\r\n            else {\r\n                callback()\r\n            }\r\n        },\r\n        updateBtn(formEl) {\r\n            if (!formEl) return\r\n            formEl.validate((valid) => {\r\n                if (valid) {\r\n                    this.$confirm(\r\n                        'Cập nhập đơn vị hành chính này. Tiếp tục?',\r\n                        'Xác nhận',\r\n                        {\r\n                            confirmButtonText: 'OK',\r\n                            cancelButtonText: 'Hủy',\r\n                            type: 'warning',\r\n                        }\r\n                    )\r\n                        .then(() => {\r\n                            this.updateAdministration()\r\n                            this.dialogFormVisible = false\r\n                        })\r\n                        .catch(() => {\r\n                        })\r\n                } else {\r\n                    console.log('error submit!')\r\n                    return false\r\n                }\r\n            })\r\n        },\r\n        deleteBtn() {\r\n            this.$confirm(\r\n                'Xóa đơn vị hành chính này. Tiếp tục?',\r\n                'Cảnh báo',\r\n                {\r\n                    confirmButtonText: 'OK',\r\n                    cancelButtonText: 'Hủy',\r\n                    type: 'warning',\r\n                }\r\n            )\r\n                .then(() => {\r\n                    this.dialogFormVisible = false\r\n                    this.$notify({\r\n                        title: 'Thành công',\r\n                        message: 'Xóa thành công',\r\n                        type: 'success'\r\n                    })\r\n                })\r\n                .catch(() => {\r\n                })\r\n        },\r\n        retrieveAdministrations() {\r\n            // this.loadingStatus = true\r\n            retrieveSubAdministrationsWithHierarchy(35)\r\n                .then((res) => {\r\n                    this.treeData = res.data\r\n                    this.loadingStatus = false\r\n                })\r\n                .catch(err => console.log(err));\r\n        },\r\n        updateAdministration() {\r\n            this.loadingStatus = true\r\n            updateAdministration(this.form.code, {\r\n                name: this.form.name,\r\n                subordinateName: this.form.subName,\r\n                administrativeLevelName: this.form.level\r\n            })\r\n                .then(\r\n                    (res) => {\r\n                        this.loadingStatus = false\r\n                        this.$notify({\r\n                            title: 'Thành công',\r\n                            message: 'Cập nhập thành công',\r\n                            type: 'success'\r\n                        })\r\n                        this.retrieveAdministrations()\r\n                    }\r\n                )\r\n                .catch(\r\n                    (err) => {\r\n                        this.loadingStatus = false\r\n                        this.$notify({\r\n                            title: 'Thất bại',\r\n                            message: 'Cập nhập thất bại',\r\n                            type: 'error',\r\n                        })\r\n                        this.$notify({\r\n                            title: 'Đã xảy ra lỗi',\r\n                            message: err.response.data.messages,\r\n                            type: 'error',\r\n                        })\r\n                        console.log(err)\r\n                    }\r\n                )\r\n\r\n        }\r\n    },\r\n    created() {\r\n        this.retrieveAdministrations()\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.tree {\r\n    margin: 30px 30px 10px 30px;\r\n    width: 100%;\r\n    height: 670px;\r\n}\r\n\r\n.form {\r\n    margin: 0px 0px 0px 20px;\r\n    width: 400px;\r\n}\r\n\r\n.el-tree {\r\n    --el-tree-node-hover-bg-color: #D0D3D4;\r\n    font-size: 20px !important;\r\n}\r\n\r\n.administrations {\r\n    height: 600px;\r\n}\r\n\r\n\r\n\r\n.map {\r\n    height: 500px;\r\n}\r\n\r\n</style>\r\n","<template>\r\n  <div id=\"mapContainer\"></div>\r\n</template>\r\n\r\n<script>\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport L from \"leaflet\";\r\nimport * as mapData from \"@/static/data-of-HaNam\";\r\nimport * as mapApi from \"@/api/map\"\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      map: null,\r\n    };\r\n  },\r\n  methods: {\r\n    retrieveDataOfRelation(relationId) {\r\n      mapApi.retrieveAllDataOfRelation(relationId).then((res) => {\r\n        try {\r\n          let members = res.data.elements[0].members\r\n          for (let i in members) {\r\n            if (members[i].type == 'way') {\r\n              this.retrieveDataOfWay(members[i].ref)\r\n              console.log(i + \" : \" + members[i].ref)\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      })\r\n        .catch((err) => {\r\n          console.log(err)\r\n        })\r\n    },\r\n    retrieveDataOfWay(wayId) {\r\n      mapApi.retrieveAllDataOfWay(wayId)\r\n        .then((res) => {\r\n          try {\r\n            let nodesData = new Map()\r\n            let boundData = []\r\n            let way = null\r\n            let elements = res.data.elements\r\n            for (let i in elements) {\r\n              if (elements[i].type == 'node') {\r\n                if (elements[i].lat != null) {\r\n                  nodesData.set(elements[i].id, [elements[i].lat, elements[i].lon])\r\n                }\r\n              }\r\n              if (elements[i].type == 'way') {\r\n                way = elements[i]\r\n              }\r\n            }\r\n            for (let j in way.nodes) {\r\n              boundData.push(nodesData.get(way.nodes[j]))\r\n            }\r\n            var latlngs = boundData\r\n            var polyline = L.polyline(latlngs, { color: 'red' }).addTo(this.map);\r\n            // zoom the map to the polyline\r\n            // this.map.fitBounds(polyline.getBounds());\r\n          } catch (error) {\r\n            console.log(error)\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  },\r\n  created() {\r\n    this.retrieveDataOfRelation(1901010)\r\n  },\r\n  mounted() {\r\n    this.map = L.map(\"mapContainer\").setView([20.5362, 105.9851], 10);\r\n    L.tileLayer(\"https://api.mapbox.com/styles/v1/dkhang233/clqdt6l9t00e301o9hcqthyz3/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiZGtoYW5nMjMzIiwiYSI6ImNscWQ3bzk2djA5ejIya3BuYXM4dm11NWMifQ.EgYHhPNYsqKwlrX_GKOzAw\",\r\n      {\r\n        maxZoom: 18,\r\n        attribution:\r\n          '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors ' +\r\n          'and  ©<a href=\"http://mapbox.com\">Mapbox</a>',\r\n      }\r\n    ).addTo(this.map);\r\n    // L.marker([20.5362, 105.9851], []).addTo(this.map);\r\n    // var customPane = this.map.createPane(\"customPane\");\r\n    // customPane.style.zIndex = 399; // put just behind the standard overlay pane which is at 400\r\n  },\r\n  onBeforeUnmount() {\r\n    if (this.map) {\r\n      this.map.remove();\r\n    }\r\n  },\r\n};\r\n</script>","import { apiMap } from \".\";\r\n\r\nexport const retrieveAllDataOfRelation = (relationId) => apiMap.get(`relation/${relationId}.json`)\r\nexport const retrieveAllDataOfWay = (wayId) => apiMap.get(`way/${wayId}/full.json`)","import { render } from \"./MapView.vue?vue&type=template&id=4caa805b\"\nimport script from \"./MapView.vue?vue&type=script&lang=js\"\nexport * from \"./MapView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Administration.vue?vue&type=template&id=251c66d4&scoped=true\"\nimport script from \"./Administration.vue?vue&type=script&lang=js\"\nexport * from \"./Administration.vue?vue&type=script&lang=js\"\n\nimport \"./Administration.vue?vue&type=style&index=0&id=251c66d4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-251c66d4\"]])\n\nexport default __exports__"],"names":["retrieveSubAdministrationsWithHierarchy","code","apiClient","get","retrieveAdministrationByName","name","updateAdministration","administration","post","class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_el_row","gutter","_component_el_col","span","_component_el_card","header","_withCtx","_component_font_awesome_icon","icon","flip","size","_component_el_input","offset","$data","filterText","$event","placeholder","_component_el_tree_v2","ref","data","treeData","props","defaultProps","$options","filterNode","height","default","node","_hoisted_2","_toDisplayString","label","onClick","showNode","_hoisted_3","_hoisted_4","_component_map_view","_component_el_dialog","dialogFormVisible","title","footer","_hoisted_5","_cache","args","deleteBtn","updateBtn","this","$refs","ruleFormRef","_component_el_form","model","form","rules","_component_el_form_item","prop","autocomplete","disabled","_component_el_select","level","_component_el_option","value","subName","loadingStatus","id","retrieveAllDataOfRelation","relationId","apiMap","retrieveAllDataOfWay","wayId","map","methods","retrieveDataOfRelation","mapApi","then","res","members","elements","i","type","retrieveDataOfWay","console","log","error","catch","err","nodesData","Map","boundData","way","lat","set","lon","j","nodes","push","latlngs","L","color","addTo","created","mounted","setView","maxZoom","attribution","onBeforeUnmount","remove","__exports__","components","MapView","children","validator","checkAdministrationName","trigger","checkAdministrationSub","watch","val","treeRef","filter","computed","mapStores","useUserStore","dataa","fullName","includes","levelName","subordinateName","rule","callback","Error","formEl","validate","valid","$confirm","confirmButtonText","cancelButtonText","$notify","message","retrieveAdministrations","administrativeLevelName","response","messages","render"],"sourceRoot":""}